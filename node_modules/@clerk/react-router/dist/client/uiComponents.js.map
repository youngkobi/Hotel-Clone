{"version":3,"sources":["../../src/client/uiComponents.tsx"],"sourcesContent":["import {\n  OrganizationProfile as BaseOrganizationProfile,\n  SignIn as BaseSignIn,\n  SignUp as BaseSignUp,\n  UserProfile as BaseUserProfile,\n} from '@clerk/clerk-react';\nimport { useRoutingProps } from '@clerk/clerk-react/internal';\nimport type { OrganizationProfileProps, SignInProps, SignUpProps, UserProfileProps } from '@clerk/types';\nimport React from 'react';\n\nimport { usePathnameWithoutSplatRouteParams } from './usePathnameWithoutSplatRouteParams';\n\n// The assignment of UserProfile with BaseUserProfile props is used\n// to support the CustomPage functionality (eg UserProfile.Page)\n// Also the `typeof BaseUserProfile` is used to resolved the following error:\n// \"The inferred type of 'UserProfile' cannot be named without a reference to ...\"\nexport const UserProfile: typeof BaseUserProfile = Object.assign(\n  (props: UserProfileProps) => {\n    const path = usePathnameWithoutSplatRouteParams();\n    return <BaseUserProfile {...useRoutingProps('UserProfile', props, { path })} />;\n  },\n  { ...BaseUserProfile },\n);\n\n// The assignment of OrganizationProfile with BaseOrganizationProfile props is used\n// to support the CustomPage functionality (eg OrganizationProfile.Page)\n// Also the `typeof BaseOrganizationProfile` is used to resolved the following error:\n// \"The inferred type of 'OrganizationProfile' cannot be named without a reference to ...\"\nexport const OrganizationProfile: typeof BaseOrganizationProfile = Object.assign(\n  (props: OrganizationProfileProps) => {\n    const path = usePathnameWithoutSplatRouteParams();\n    return <BaseOrganizationProfile {...useRoutingProps('OrganizationProfile', props, { path })} />;\n  },\n  { ...BaseOrganizationProfile },\n);\n\nexport const SignIn = (props: SignInProps) => {\n  const path = usePathnameWithoutSplatRouteParams();\n  return <BaseSignIn {...useRoutingProps('SignIn', props, { path })} />;\n};\n\nexport const SignUp = (props: SignUpProps) => {\n  const path = usePathnameWithoutSplatRouteParams();\n  return <BaseSignUp {...useRoutingProps('SignUp', props, { path })} />;\n};\n"],"mappings":";AAAA;AAAA,EACE,uBAAuB;AAAA,EACvB,UAAU;AAAA,EACV,UAAU;AAAA,EACV,eAAe;AAAA,OACV;AACP,SAAS,uBAAuB;AAEhC,OAAO,WAAW;AAElB,SAAS,0CAA0C;AAM5C,IAAM,cAAsC,OAAO;AAAA,EACxD,CAAC,UAA4B;AAC3B,UAAM,OAAO,mCAAmC;AAChD,WAAO,oCAAC,mBAAiB,GAAG,gBAAgB,eAAe,OAAO,EAAE,KAAK,CAAC,GAAG;AAAA,EAC/E;AAAA,EACA,EAAE,GAAG,gBAAgB;AACvB;AAMO,IAAM,sBAAsD,OAAO;AAAA,EACxE,CAAC,UAAoC;AACnC,UAAM,OAAO,mCAAmC;AAChD,WAAO,oCAAC,2BAAyB,GAAG,gBAAgB,uBAAuB,OAAO,EAAE,KAAK,CAAC,GAAG;AAAA,EAC/F;AAAA,EACA,EAAE,GAAG,wBAAwB;AAC/B;AAEO,IAAM,SAAS,CAAC,UAAuB;AAC5C,QAAM,OAAO,mCAAmC;AAChD,SAAO,oCAAC,cAAY,GAAG,gBAAgB,UAAU,OAAO,EAAE,KAAK,CAAC,GAAG;AACrE;AAEO,IAAM,SAAS,CAAC,UAAuB;AAC5C,QAAM,OAAO,mCAAmC;AAChD,SAAO,oCAAC,cAAY,GAAG,gBAAgB,UAAU,OAAO,EAAE,KAAK,CAAC,GAAG;AACrE;","names":[]}