{"version":3,"sources":["../../src/client/useAwaitableNavigate.tsx"],"sourcesContent":["import React from 'react';\nimport type { NavigateOptions } from 'react-router';\nimport { useLocation, useNavigate } from 'react-router';\n\ntype Resolve = (value?: unknown) => void;\n\nexport const useAwaitableNavigate = () => {\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  const resolveFunctionsRef = React.useRef<Resolve[]>([]);\n  const resolveAll = () => {\n    resolveFunctionsRef.current.forEach(resolve => resolve());\n    resolveFunctionsRef.current.splice(0, resolveFunctionsRef.current.length);\n  };\n\n  // location.key will change even when navigating to the same url,\n  // so we will successfully resolve in that case as well\n  React.useEffect(() => {\n    resolveAll();\n  }, [location]);\n\n  return (to: string, opts?: NavigateOptions) => {\n    return new Promise(res => {\n      resolveFunctionsRef.current.push(res);\n      void navigate(to, opts);\n    });\n  };\n};\n"],"mappings":";AAAA,OAAO,WAAW;AAElB,SAAS,aAAa,mBAAmB;AAIlC,IAAM,uBAAuB,MAAM;AACxC,QAAM,WAAW,YAAY;AAC7B,QAAM,WAAW,YAAY;AAE7B,QAAM,sBAAsB,MAAM,OAAkB,CAAC,CAAC;AACtD,QAAM,aAAa,MAAM;AACvB,wBAAoB,QAAQ,QAAQ,aAAW,QAAQ,CAAC;AACxD,wBAAoB,QAAQ,OAAO,GAAG,oBAAoB,QAAQ,MAAM;AAAA,EAC1E;AAIA,QAAM,UAAU,MAAM;AACpB,eAAW;AAAA,EACb,GAAG,CAAC,QAAQ,CAAC;AAEb,SAAO,CAAC,IAAY,SAA2B;AAC7C,WAAO,IAAI,QAAQ,SAAO;AACxB,0BAAoB,QAAQ,KAAK,GAAG;AACpC,WAAK,SAAS,IAAI,IAAI;AAAA,IACxB,CAAC;AAAA,EACH;AACF;","names":[]}