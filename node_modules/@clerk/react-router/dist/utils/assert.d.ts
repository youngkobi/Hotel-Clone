import { ClerkState } from '../client/types.js';
import '@clerk/clerk-react';
import '@clerk/types';
import 'react';

declare function warnForSsr(val: ClerkState | undefined): void;
declare function assertEnvVar(name: any, errorMessage: string): asserts name is string;
declare function assertValidClerkState(val: any): asserts val is ClerkState | undefined;
declare function assertPublishableKeyInSpaMode(key: any): asserts key is string;
/**
 * When React Router is used as a framework, the __reactRouterContext object is populated on window.
 * The isSpaMode will then be set to true if you use https://reactrouter.com/how-to/spa or when you deactivate SSR
 *
 * When React Router is used as a library the __reactRouterContext object is not populated on window at all.
 *
 * So in library mode we can't determine if we are in SPA mode or not so we return undefined.
 */
declare const isSpaMode: () => boolean | undefined;

export { assertEnvVar, assertPublishableKeyInSpaMode, assertValidClerkState, isSpaMode, warnForSsr };
