// src/utils/assert.ts
import { invalidClerkStatePropError, noClerkStateError, publishableKeyMissingErrorInSpaMode } from "./errors.js";
function warnForSsr(val) {
  if (!val || !val.__internal_clerk_state) {
    console.warn(noClerkStateError);
  }
}
function assertEnvVar(name, errorMessage) {
  if (!name || typeof name !== "string") {
    throw new Error(errorMessage);
  }
}
function assertValidClerkState(val) {
  if (!val) {
    throw new Error(noClerkStateError);
  }
  if (!!val && !val.__internal_clerk_state) {
    throw new Error(invalidClerkStatePropError);
  }
}
function assertPublishableKeyInSpaMode(key) {
  if (!key || typeof key !== "string") {
    throw new Error(publishableKeyMissingErrorInSpaMode);
  }
}
var isSpaMode = () => {
  var _a;
  if (typeof window !== "undefined" && typeof ((_a = window.__reactRouterContext) == null ? void 0 : _a.isSpaMode) !== "undefined") {
    return window.__reactRouterContext.isSpaMode;
  }
  return void 0;
};
export {
  assertEnvVar,
  assertPublishableKeyInSpaMode,
  assertValidClerkState,
  isSpaMode,
  warnForSsr
};
//# sourceMappingURL=assert.js.map