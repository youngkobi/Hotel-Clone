// src/ssr/getAuth.ts
import {
  getAuthObjectForAcceptedToken
} from "@clerk/backend/internal";
import { noLoaderArgsPassedInGetAuth } from "../utils/errors.js";
import { authenticateRequest } from "./authenticateRequest.js";
import { loadOptions } from "./loadOptions.js";
var getAuth = async (args, opts) => {
  if (!args || args && (!args.request || !args.context)) {
    throw new Error(noLoaderArgsPassedInGetAuth);
  }
  const { acceptsToken, ...restOptions } = opts || {};
  const loadedOptions = loadOptions(args, restOptions);
  const requestState = await authenticateRequest(args, {
    ...loadedOptions,
    acceptsToken: "any"
  });
  const authObject = requestState.toAuth();
  return getAuthObjectForAcceptedToken({ authObject, acceptsToken });
};
export {
  getAuth
};
//# sourceMappingURL=getAuth.js.map